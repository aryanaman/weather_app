{"version":3,"sources":["components/search-bar.js","components/current-weather.js","apis/open-weather-api.js","components/forecast-weather.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","e","this","inputChange","preventDefault","formSubmitted","location","className","onSubmit","onFormSubmit","type","id","name","value","onChange","onInputChange","React","Component","CurrentWeather","img","icon","url","src","alt","description","currentTemperature","feelsLike","axios","defaults","baseURL","appIdQueryParam","process","getForecast","lat","lon","get","Forecast","forecastItems","forecast","map","f","i","weather","ampm","hour","Date","dt","getHours","temp","main","App","state","hourlyForecast","setState","target","a","Location","weatherRes","data","coord","forecastRes","feels_like","hourly","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76d11efd.chunk.js","sourcesContent":["import React from 'react';\nimport './search-bar.scss';\n\nclass SearchBar extends React.Component {\n    constructor(props){\n        super(props);\n    }\n\n    onInputChange(e){\n        this.props.inputChange(e);\n    }\n\n    onFormSubmit(e){\n        e.preventDefault();\n        this.props.formSubmitted();\n    }\n\n    render() {\n        \n        const location = this.props.location;\n        \n        return (\n            <div className=\"search-bar\">\n                <form className=\"search-bar_form\" onSubmit = {(e)=> this.onFormSubmit(e)}>\n                    <button className=\"search-bar_button\" type=\"submit\">Search</button>\n                    <input\n                        id=\"search\"\n                        name=\"search\"\n                        value={location}\n                        className=\"search-bar_input\"\n                        onChange ={(e)=>this.onInputChange(e)}\n                    ></input>\n                </form>\n            </div>\n            \n            \n        );\n    }\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport './current-weather.scss';\n\nclass CurrentWeather extends React.Component {\n    render() {\n        let img;\n        if(this.props.icon){\n            const url = `http://openweathermap.org/img/wn/${this.props.icon}@4x.png`;\n            img = <img className=\"current-weather_icon\" src={url} alt={this.props.description}/>\n        }\n        \n        \n        return (\n            <div className=\"current-weather\">\n                <div className=\"current-weather_content\">\n                    <div className=\"current-weather_text\">\n                        <p className=\"current-weather_temp\">{this.props.currentTemperature}\t°</p>\n                        <p className=\"current-weather_description\">{this.props.description}</p>\n                    </div>\n                    {img}\n                    \n                </div>\n                <div>\n                    <p className=\"current-weather_feels-like\">\n                        Feels like {this.props.feelsLike}°\n                    </p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CurrentWeather;\n\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.openweathermap.org/data/2.5/';\nconst appIdQueryParam = `appid=${process.env.REACT_APP_WEATHER_API_KEY}`;\n\nfunction getCurrentWeather(Location){\n   return axios.get(`weather?q=${Location}&units=metric&${appIdQueryParam}`);\n}\n\nfunction getForecast(lat, lon){\n    return axios.get(\n    `onecall?lat=${lat}&lon=${lon}&units=metric&${appIdQueryParam}`\n    )\n}\n\nexport{\n    getCurrentWeather,\n    getForecast\n}","import React from 'react';\nimport './forecast-weather.scss';\nclass Forecast extends React.Component {\n    render() {\n        const forecastItems = this.props.forecast.map((f,i) =>{\n            const key = `forecast-item_$(i)`;\n            const url = `http://openweathermap.org/img/wn/${f.weather[0].icon}@2x.png`;\n            let ampm= \"AM\";\n            let hour = new Date(f.dt * 1000).getHours();\n\n            if(hour > 12){\n                hour = hour - 12;\n                ampm = \"PM\";\n            }\n\n        return (\n            <div className=\"forecast-item\" key={key}>\n                <p className=\"forecast-item_hour\">\n                    {hour}:00 {ampm}{\" \"}\n                </p>\n                <p className =\"forecast-item_temp\">{f.temp} °</p>\n                <img src={url} alt={f.weather[0].description} />\n                <p className=\"forecast-item_description\">{f.weather[0].main}</p>\n            </div>\n        );\n    });\n    \n\n    return (\n        <div className=\"forecast\"> \n        <h3 className=\"forecast-title\">Hourly Forecast</h3>\n        <div className=\"forecast-items\">{forecastItems}</div>\n    </div>\n    )\n\n\n\n}\n\n}\n\nexport default Forecast;","import './App.scss';\nimport SearchBar from './components/search-bar';\nimport CurrentWeather from './components/current-weather';\nimport { getCurrentWeather , getForecast } from './apis/open-weather-api';\nimport Forecast from './components/forecast-weather'\nimport React from 'react';\n\nclass App extends React.Component{\n  \n  constructor(props){\n    super(props);\n    this.state = {\n        location:\"Kolkata\",\n        temp:\"\",\n        feelsLike:\"\",\n        description:\"\",\n        icon:\"\",\n        hourlyForecast:[]\n    };\n    this.onFormSubmit();\n}\n\nonInputChange(e){\n    this.setState({\n        location: e.target.value\n    });\n\n    \n}\n\nasync onFormSubmit(){\n  const weatherRes = await getCurrentWeather(this.state.location);\n  const lat = weatherRes.data.coord.lat;\n  const lon = weatherRes.data.coord.lon;\n  const forecastRes = await getForecast(lat,lon);\n\n  this.setState({\n    temp: weatherRes.data.main.temp,\n    feelsLike:weatherRes.data.main.feels_like,\n    description:weatherRes.data.weather[0].main,\n    icon:weatherRes.data.weather[0].icon,\n    hourlyForecast: forecastRes.data.hourly\n});\n\n}\n  render(){\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <SearchBar \n          location={this.state.location} \n          inputChange={(e)=> this.onInputChange(e)}\n          formSubmitted = {()=>this.onFormSubmit()}\n          />\n          <CurrentWeather \n          currentTemperature={this.state.temp}\n          feelsLike={this.state.feelsLike}\n          description={this.state.description}\n          icon = {this.state.icon}\n          />\n          <Forecast forecast = {this.state.hourlyForecast} />\n        </div>\n        \n      </div>\n    );\n  }\n\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}